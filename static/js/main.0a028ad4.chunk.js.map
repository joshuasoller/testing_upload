{"version":3,"sources":["components/MyFirebase.js","components/RetreiveData.js","components/AddData.js","components/AdminEdit.js","components/StudentAccess.js","components/widgets.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","React","Component","AddData","props","handleChange","e","setState","target","name","value","console","log","state","handleSubmit","preventDefault","firstname","middlename","lastname","studentID","currentSemester","yearLevel","course","birthday","semesterYear","ref","once","then","doc","val","alert","set","year","semester","null","catch","error","className","style","minWidth","onSubmit","this","onChange","id","type","placeholder","required","autocomplete","class","aria-describedby","defaultValue","width","list","onclick","min","max","Date","getFullYear","AdminEdit","showAlert","snackbarManager","current","create","message","jump","getGrades","getRecord","ID","document","getElementById","record","fillAllinput","forceUpdate","enablesAddNew","updateInfo","values","child","setValue","data","grades","submitGrades","arrayKeys","Object","keys","arrayValues","i","length","update","disabled","tba","isTBA","status","addNewSubject","canAdd","newSubject","newGrade","Number","deleteSubject","deleteSub","selectedIndex","remove","deleteAlls","test","arrayTest","a","maxWidth","marginRight","marginTop","height","marginBottom","marginLeft","paddingTop","backgroundColor","margin","map","subjectGrade","key","color","input","onClick","step","htmlFor","selected","subject","StudentAccess","getRecords","records","backgroundImage","readOnly","autoFocus","Widgets","weather","d","s","js","fjs","getElementsByTagName","createElement","src","parentNode","insertBefore","pointerEvents","href","data-label_1","data-label_2","data-theme","title","Alt","border","App","Fragment","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a028ad4.chunk.js","sourcesContent":["import \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport * as firebase from \"firebase\";\r\n\r\n// Your web app's Firebase configuration\r\nvar secondaryAppConfig = {\r\n  apiKey: \"AIzaSyCeLshZ9kN60e0LXf-JidykwHhkXNKM28c\",\r\n  authDomain: \"student-grades-ee387.firebaseapp.com\",\r\n  databaseURL: \"https://student-grades-ee387.firebaseio.com\",\r\n  projectId: \"student-grades-ee387\",\r\n  storageBucket: \"student-grades-ee387.appspot.com\",\r\n  messagingSenderId: \"245975408621\",\r\n  appId: \"1:245975408621:web:0484dc6a5b325b9d5c91e4\",\r\n  measurementId: \"G-YR2RGFP1NE\"\r\n};\r\n// Initialize Firebase\r\n//firebase.initializeApp(secondaryAppConfig);\r\nfirebase.initializeApp(secondaryAppConfig);\r\n\r\n//export const db = firebase.firestore(); // initialize firestore\r\nexport var database = firebase.database();\r\n","import React, { Component } from \"react\";\r\nimport { database } from \"./MyFirebase\";\r\nimport \"../App.css\";\r\nimport \"firebase/app\";\r\nimport _ from \"lodash\";\r\n//////////////////this is the student access\r\nclass RetrieveData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.records = {};\r\n    this.grades = {};\r\n\r\n    this.studentID = {\r\n      id: \"\"\r\n    };\r\n  }\r\n\r\n  getGrades = e => {\r\n    e.preventDefault();\r\n    let studentID = document.getElementById(\"studentID\").value;\r\n    database\r\n      .ref(\"students/\" + studentID + \"/grades\")\r\n      .once(\"value\")\r\n      .then(doc => {\r\n        const data = doc.val();\r\n\r\n        this.grades = data;\r\n\r\n        console.log(this.grades);\r\n        this.getRecords(studentID);\r\n      });\r\n  };\r\n\r\n  getRecords = ID => {\r\n    database\r\n      .ref(\"students/\" + ID)\r\n      .once(\"value\")\r\n      .then(doc => {\r\n        const data = doc.val();\r\n\r\n        this.records = data;\r\n        this.forceUpdate();\r\n        console.log(this.records);\r\n        this.fillAllinput();\r\n      });\r\n  };\r\n\r\n  fillAllinput = () => {\r\n    document.getElementById(\"firstname\").value = this.records.firstname;\r\n    document.getElementById(\"middlename\").value = this.records.middlename;\r\n    document.getElementById(\"surname\").value = this.records.surname;\r\n\r\n    document.getElementById(\"course\").value = this.records.course;\r\n    document.getElementById(\"year\").value = this.records.year;\r\n    document.getElementById(\"semester\").value = this.records.semester;\r\n    document.getElementById(\"birthday\").value = this.records.birthday;\r\n    document.getElementById(\"semesterYear\").value = this.records.semesterYear;\r\n  };\r\n\r\n  render() {\r\n    let arrayKeys, arrayValues, arrayTest, a;\r\n    if (this.grades != null) {\r\n      arrayKeys = Object.keys(this.grades);\r\n      arrayValues = Object.values(this.grades);\r\n      arrayTest = [...arrayValues];\r\n      a = -1;\r\n    }\r\n    return (\r\n      <div name=\"main-doesnt-need-to-be-modified\">\r\n        <div\r\n          name=\"main-resizeable-container\"\r\n          className=\"container\"\r\n          style={({ backgroundColor: \"blue\" }, { maxWidth: 500 })}\r\n        >\r\n          <form onSubmit={this.getGrades}>\r\n            <label htmlFor=\"studentID\">ID</label>\r\n            <input name=\"studentID\" type=\"text\" id=\"studentID\" required></input>\r\n            <button>push</button>\r\n          </form>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                Name\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"e.g. Joe\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n              id=\"firstname\"\r\n              autocomplete=\"off\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                Middle Name\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"e.g. Joe\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n              autocomplete=\"off\"\r\n              id=\"middlename\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                Surname\r\n              </span>\r\n            </div>\r\n            <input\r\n              id=\"surname\"\r\n              autocomplete=\"off\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"e.g. Joe\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                BirthDay\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"date\"\r\n              id=\"birthday\"\r\n              name=\"birthday\"\r\n              className=\"shortFieldWidth browser-default\"\r\n              defaultValue=\"1900-01-01\"\r\n              autocomplete=\"off\"\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                Course\r\n              </span>\r\n            </div>\r\n            <input\r\n              id=\"course\"\r\n              className=\"browser-default\"\r\n              style={{ width: 150 }}\r\n              list=\"courseList\"\r\n              autocomplete=\"off\"\r\n              placeholder=\"course\"\r\n              onclick=\"selectText()\"\r\n              required\r\n            />\r\n            <datalist id=\"courseList\">\r\n              <option value=\"\">Select...</option>\r\n              <option value=\"BSCS\" />\r\n              <option value=\"BSBA\" />\r\n              <option value=\"BSED\" />\r\n              <option value=\"BSN\" />\r\n            </datalist>\r\n\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                Year Level\r\n              </span>\r\n            </div>\r\n            <input\r\n              id=\"year\"\r\n              className=\"browser-default\"\r\n              style={{ width: 150 }}\r\n              list=\"yearLevel\"\r\n              placeholder=\"year\"\r\n              autocomplete=\"off\"\r\n              required\r\n            />\r\n            <datalist id=\"yearLevel\">\r\n              <option value=\"\">Select...</option>\r\n              <option value=\"1st\" />\r\n              <option value=\"2nd\" />\r\n              <option value=\"3rd\" />\r\n              <option value=\"4th\" />\r\n              <option value=\"Masteral\" />\r\n            </datalist>\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  Semester\r\n                </span>\r\n              </div>\r\n              <input\r\n                id=\"semester\"\r\n                className=\"browser-default\"\r\n                style={{ width: 150 }}\r\n                list=\"currentSemester\"\r\n                placeholder=\"current sem\"\r\n                autocomplete=\"off\"\r\n                required\r\n              />\r\n              <datalist id=\"currentSemester\">\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"1st\" />\r\n                <option value=\"2nd\" />\r\n                <option value=\"Summer\" />\r\n              </datalist>\r\n            </div>\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  School Year\r\n                </span>\r\n              </div>\r\n              <input\r\n                class=\"shortFieldWidth\"\r\n                onChange={this.handleChange}\r\n                autocomplete=\"off\"\r\n                type=\"number\"\r\n                id=\"semesterYear\"\r\n                name=\"semesterYear\"\r\n                min=\"1975\"\r\n                max=\"3000\"\r\n                placeholder={new Date().getFullYear()}\r\n                required\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <table key={this.grades}>\r\n            <tbody>\r\n              <tr>\r\n                <th className=\"is-italic\">Subject</th>\r\n                <th className=\"is-italic\">Grade</th>\r\n              </tr>\r\n              {arrayKeys && // if it exist\r\n                arrayKeys.map(subjectGrade => {\r\n                  if (subjectGrade !== \"null\") {\r\n                    a = a + 1;\r\n                    if (arrayTest[a] > 75) {\r\n                      // then map it\r\n                      return (\r\n                        <tr key={a + \"tr\"}>\r\n                          <td key={arrayKeys[a]}>\r\n                            <input\r\n                              defaultValue={subjectGrade}\r\n                              id={arrayValues[a]}\r\n                              style={{ color: \"black\" }}\r\n                              disabled={true}\r\n                            />\r\n                          </td>\r\n                          <td key={subjectGrade + a}>\r\n                            <input\r\n                              defaultValue={arrayTest[a]}\r\n                              name={subjectGrade}\r\n                              onChange={this.handleChange}\r\n                              disabled={true}\r\n                              type=\"number\"\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    } else if (arrayTest[a] < 75) {\r\n                      // then map it\r\n                      return (\r\n                        <tr key={a + \"tr\"}>\r\n                          <td\r\n                            key={arrayKeys[a]}\r\n                            style={{ backgroundColor: \"#f88a8a\" }}\r\n                          >\r\n                            <input\r\n                              defaultValue={subjectGrade}\r\n                              id={arrayValues[a]}\r\n                              style={{ color: \"black\" }}\r\n                              disabled={true}\r\n                            />\r\n                          </td>\r\n                          <td\r\n                            key={subjectGrade + a}\r\n                            style={{ backgroundColor: \"#f88a8a\" }}\r\n                          >\r\n                            <input\r\n                              defaultValue={arrayTest[a]}\r\n                              name={subjectGrade}\r\n                              onChange={this.handleChange}\r\n                              disabled={true}\r\n                              type=\"text\"\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    } else {\r\n                      // then map it\r\n                      return (\r\n                        <tr key={a + \"tr\"}>\r\n                          <td\r\n                            key={arrayKeys[a]}\r\n                            style={{ backgroundColor: \"#b0b0b0\" }}\r\n                          >\r\n                            <input\r\n                              defaultValue={subjectGrade}\r\n                              id={arrayValues[a]}\r\n                              style={{ color: \"black\" }}\r\n                              disabled={true}\r\n                            />\r\n                          </td>\r\n                          <td\r\n                            key={subjectGrade + a}\r\n                            style={{ backgroundColor: \"#b0b0b0\" }}\r\n                          >\r\n                            <input\r\n                              defaultValue={arrayTest[a]}\r\n                              name={subjectGrade}\r\n                              onChange={this.handleChange}\r\n                              disabled={true}\r\n                              type=\"text\"\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    }\r\n                  }\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RetrieveData;\r\n","import React, { Component } from \"react\";\r\nimport \"firebase/app\";\r\nimport { database } from \"./MyFirebase\";\r\n\r\nclass AddData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      studentID: \"\",\r\n      firstname: \"\",\r\n      middlename: \"\",\r\n      lastname: \"\",\r\n      currentSemester: \"\",\r\n      semesterYear: \"\",\r\n      birthday: \"\",\r\n      yearLevel: \"\",\r\n      course: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      firstname,\r\n      middlename,\r\n      lastname,\r\n      studentID,\r\n      currentSemester,\r\n      yearLevel,\r\n      course,\r\n      birthday,\r\n      semesterYear\r\n    } = this.state;\r\n\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .once(\"value\")\r\n      .then(function(doc) {\r\n        const data = doc.val();\r\n        if (data !== null) {\r\n          alert(\"Student ID already Exist\");\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n\r\n          database.ref(\"students/\" + studentID).set({\r\n            firstname: firstname,\r\n            middlename: middlename,\r\n            lastname: lastname,\r\n            birthday: birthday,\r\n            course: course,\r\n            year: yearLevel,\r\n            semester: currentSemester,\r\n            semesterYear: semesterYear\r\n          });\r\n          database\r\n            .ref(\"students/\" + studentID + \"/grades\")\r\n            .set({\r\n              null: \"null\"\r\n            })\r\n            .catch(function(error) {\r\n              alert(\"fuuuuuuck!\");\r\n              console.log(\"Error getting document:\", error);\r\n            });\r\n\r\n          alert(\"Student successfully created\");\r\n          //window.location.reload();\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"fuuuuuuck!\");\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"container-fluid\"\r\n          style={({ backgroundColor: \"blue\" }, { minWidth: 500 })}\r\n        >\r\n          <h3>Testing</h3>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                onChange={this.handleChange}\r\n                value={this.state.id}\r\n                type=\"text\"\r\n                className=\"form-control no-border\"\r\n                placeholder=\"ID\"\r\n                required\r\n                autocomplete=\"off\"\r\n                id=\"studentID\"\r\n                name=\"studentID\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  Name\r\n                </span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"e.g. Joe\"\r\n                aria-describedby=\"basic-addon1\"\r\n                name=\"firstname\"\r\n                id=\"firstname\"\r\n                autocomplete=\"off\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  Middle Name\r\n                </span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"e.g. Joe\"\r\n                aria-describedby=\"basic-addon1\"\r\n                name=\"middlename\"\r\n                id=\"middlename\"\r\n                autocomplete=\"off\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  Surname\r\n                </span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"e.g. Joe\"\r\n                aria-describedby=\"basic-addon1\"\r\n                name=\"lastname\"\r\n                id=\"lastname\"\r\n                autocomplete=\"off\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  BirthDay\r\n                </span>\r\n              </div>\r\n              <input\r\n                type=\"date\"\r\n                id=\"birthday\"\r\n                name=\"birthday\"\r\n                className=\"shortFieldWidth browser-default\"\r\n                defaultValue=\"1900-01-01\"\r\n                autocomplete=\"off\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  Course\r\n                </span>\r\n              </div>\r\n              <input\r\n                id=\"course\"\r\n                name=\"course\"\r\n                onChange={this.handleChange}\r\n                style={{ width: 150 }}\r\n                list=\"courseList\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"course\"\r\n                onclick=\"selectText()\"\r\n                required\r\n              />\r\n              <datalist id=\"courseList\">\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"BSCS\" />\r\n                <option value=\"BSBA\" />\r\n                <option value=\"BSED\" />\r\n                <option value=\"BSN\" />\r\n              </datalist>\r\n\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  Year Level\r\n                </span>\r\n              </div>\r\n              <input\r\n                id=\"yearLevel\"\r\n                name=\"yearLevel\"\r\n                className=\"browser-default\"\r\n                style={{ width: 150 }}\r\n                list=\"yearlevels\"\r\n                placeholder=\"year\"\r\n                autocomplete=\"off\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <datalist id=\"yearlevels\">\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"1st\" />\r\n                <option value=\"2nd\" />\r\n                <option value=\"3rd\" />\r\n                <option value=\"4th\" />\r\n                <option value=\"Masteral\" />\r\n              </datalist>\r\n\r\n              <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                    Semester\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  id=\"currentSemester\"\r\n                  name=\"currentSemester\"\r\n                  className=\"browser-default\"\r\n                  style={{ width: 150 }}\r\n                  list=\"currentSemesters\"\r\n                  placeholder=\"current sem\"\r\n                  autocomplete=\"off\"\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n                <datalist id=\"currentSemesters\">\r\n                  <option value=\"\">Select...</option>\r\n                  <option value=\"1st\" />\r\n                  <option value=\"2nd\" />\r\n                  <option value=\"Summer\" />\r\n                </datalist>\r\n              </div>\r\n\r\n              <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                    School Year\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  class=\"shortFieldWidth\"\r\n                  onChange={this.handleChange}\r\n                  autocomplete=\"off\"\r\n                  type=\"number\"\r\n                  id=\"semesterYear\"\r\n                  name=\"semesterYear\"\r\n                  min=\"1975\"\r\n                  max=\"3000\"\r\n                  placeholder={new Date().getFullYear()}\r\n                  onChange={this.handleChange}\r\n                  required\r\n                ></input>\r\n              </div>\r\n            </div>\r\n\r\n            <button>Submit Record</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddData;\r\n","import React, { Component } from \"react\";\r\nimport \"firebase/app\";\r\nimport { database } from \"./MyFirebase\";\r\n\r\nclass AdminEdit extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n\r\n    this.test = {};\r\n    this.grades = {};\r\n    this.record = {};\r\n    this.isTBA = {\r\n      status: true\r\n    };\r\n\r\n    this.ID = {\r\n      id: null\r\n    };\r\n\r\n    ////bind functions here\r\n  }\r\n\r\n  //////// FETCHING THE GRADE FUNCTION\r\n  showAlert = () => {\r\n    this.snackbarManager.current.create({\r\n      message: \"Hello World!\"\r\n    });\r\n  };\r\n\r\n  jump = e => {\r\n    e.preventDefault();\r\n    this.getGrades();\r\n    this.getGrades();\r\n  };\r\n\r\n  getRecord = e => {\r\n    e.preventDefault();\r\n    this.ID.id = document.getElementById(\"studentID\").value;\r\n\r\n    this.record = {};\r\n    let studentID = this.ID.id;\r\n\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .once(\"value\")\r\n      .then(doc => {\r\n        this.record = doc.val();\r\n\r\n        this.fillAllinput();\r\n        this.forceUpdate();\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"ID or Record doesnt exist\");\r\n        console.log(\"Error getting document:\", error);\r\n        //window.location.reload();\r\n      });\r\n    //this.enablesAddNew();\r\n  };\r\n\r\n  fillAllinput = () => {\r\n    const {\r\n      firstname,\r\n      middlename,\r\n      lastname,\r\n      course,\r\n      year,\r\n      birthday,\r\n      semester,\r\n      semesterYear\r\n    } = this.record;\r\n\r\n    document.getElementById(\"firstname\").value = firstname;\r\n    document.getElementById(\"middlename\").value = middlename;\r\n    document.getElementById(\"lastname\").value = lastname;\r\n\r\n    document.getElementById(\"course\").value = course;\r\n    document.getElementById(\"yearLevel\").value = year;\r\n    document.getElementById(\"semester\").value = semester;\r\n    document.getElementById(\"birthday\").value = birthday;\r\n    document.getElementById(\"semesterYear\").value = semesterYear;\r\n    this.enablesAddNew();\r\n  };\r\n\r\n  updateInfo = () => {\r\n    let studentID = this.ID.id;\r\n\r\n    let firstname = document.getElementById(\"firstname\").value;\r\n    let middlename = document.getElementById(\"middlename\").value;\r\n    let lastname = document.getElementById(\"lastname\").values;\r\n\r\n    let course = document.getElementById(\"course\").value;\r\n    let yearLevel = document.getElementById(\"yearLevel\").value;\r\n    let semester = document.getElementById(\"semester\").value;\r\n    let birthday = document.getElementById(\"birthday\").value;\r\n    let semesterYear = document.getElementById(\"semesterYear\").value;\r\n    this.enablesAddNew();\r\n\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .child(\"firstname\")\r\n      .setValue(firstname);\r\n    ///////////////\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .child(\"middlename\")\r\n      .setValue(middlename);\r\n    //////////////\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .child(\"lastname\")\r\n      .setValue(lastname);\r\n    /////////////\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .child(\"course\")\r\n      .setValue(course);\r\n    ////////////////\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .child(\"year\")\r\n      .setValue(yearLevel);\r\n    ///////////////\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .child(\"birthday\")\r\n      .setValue(birthday);\r\n    ///////////////\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .child(\"semesterYear\")\r\n      .setValue(semesterYear);\r\n    ///////////////\r\n    database\r\n      .ref(\"students/\" + studentID)\r\n      .child(\"semester\")\r\n      .setValue(semester);\r\n    ///////////////\r\n  };\r\n\r\n  getGrades = e => {\r\n    e.preventDefault();\r\n    let studentID = document.getElementById(\"studentID\").value;\r\n    this.state = {};\r\n    database\r\n      .ref(\"students/\" + studentID + \"/grades\")\r\n      .once(\"value\")\r\n      .then(doc => {\r\n        const data = doc.val();\r\n\r\n        this.state = data;\r\n        this.grades = data;\r\n\r\n        console.log(\"this state\", this.state);\r\n        this.getRecord(e);\r\n      })\r\n      .catch(function(error) {\r\n        //alert(\"ID or Record doesnt exist\");\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  ///////////CHECKS THE CHANGES IN THE INPUT FIELDS//////////\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n    console.log(this.state);\r\n  };\r\n\r\n  ///////////////////SUBMITS THE GRADES///////////////////\r\n  submitGrades = e => {\r\n    e.preventDefault();\r\n\r\n    let arrayKeys = Object.keys(this.state);\r\n    let arrayValues = Object.values(this.state);\r\n\r\n    for (let i = 0; i < arrayKeys.length; i++) {\r\n      /*\r\n        database\r\n        .ref(\"students/\" + this.ID.id + \"/grades\")\r\n        .child(arrayKeys[i])\r\n        .setValue(arrayValues[i]);\r\n        */\r\n\r\n      database\r\n        .ref(\"students/\" + this.ID.id + \"/grades\")\r\n        .update({ [arrayKeys[i]]: arrayValues[i] })\r\n        .then()\r\n        .catch();\r\n    }\r\n    alert(\"saved successfully\");\r\n  };\r\n  ///////////////enables fields that lets you add new subject//////////////////////\r\n  enablesAddNew = () => {\r\n    console.log(\"Reaches here\");\r\n    document.getElementById(\"saveChanges\").disabled = false;\r\n    document.getElementById(\"newGrade\").disabled = false;\r\n    document.getElementById(\"newSubject\").disabled = false;\r\n    document.getElementById(\"newButton\").disabled = false;\r\n    document.getElementById(\"refresh\").disabled = false;\r\n    document.getElementById(\"deleteAll\").disabled = false;\r\n\r\n    //////enable save button\r\n\r\n    /////////////// also the delete buttons\r\n    document.getElementById(\"deleteButton\").disabled = false;\r\n    document.getElementById(\"deleteSubject\").disabled = false;\r\n    document.getElementById(\"TBA\").disabled = false;\r\n  };\r\n  /////////////add new subject/////////////\r\n  tba = () => {\r\n    if (this.isTBA.status) {\r\n      console.log(\"the newgrade is disabled\");\r\n      document.getElementById(\"newGrade\").value = \"TBA\";\r\n      document.getElementById(\"newGrade\").disabled = true;\r\n      this.isTBA.status = false;\r\n    } else {\r\n      console.log(\"the newgrade is enabled\");\r\n      document.getElementById(\"newGrade\").disabled = false;\r\n      document.getElementById(\"newGrade\").value = \"\";\r\n      this.isTBA.status = true;\r\n    }\r\n  };\r\n\r\n  addNewSubject = e => {\r\n    e.preventDefault();\r\n    let canAdd = true;\r\n    let newSubject = document.getElementById(\"newSubject\").value;\r\n    let newGrade = document.getElementById(\"newGrade\").value;\r\n    let arrayKeys = Object.keys(this.grades);\r\n\r\n    if (newGrade !== \"TBA\") {\r\n      newGrade = Number(newGrade);\r\n    }\r\n\r\n    //this loop will check if the subject code is already existing or not\r\n    for (let i = 0; i < arrayKeys.length; i++) {\r\n      if (newSubject === arrayKeys[i]) {\r\n        canAdd = false;\r\n      }\r\n    }\r\n\r\n    if (!canAdd) {\r\n      alert(\"The subject \" + newSubject + \" already exist\");\r\n    } else {\r\n      database\r\n        .ref(\"students/\" + this.ID.id + \"/grades\")\r\n        .update({ [newSubject]: newGrade })\r\n        .then()\r\n        .catch();\r\n\r\n      this.getGrades(e);\r\n      this.forceUpdate();\r\n      document.getElementById(\"newSubject\").value = null;\r\n      document.getElementById(\"newGrade\").value = null;\r\n    }\r\n  };\r\n  //////////////////\r\n  deleteSubject = e => {\r\n    e.preventDefault();\r\n    let newSubject = document.getElementById(\"deleteSubject\");\r\n    let deleteSub = newSubject[newSubject.selectedIndex].value;\r\n\r\n    database\r\n      .ref(\"students/\" + this.ID.id + \"/grades\")\r\n      .child(deleteSub)\r\n      .remove()\r\n      .catch(e);\r\n    {\r\n    }\r\n    alert(\"The subject \" + deleteSub + \" has been deleted\");\r\n    this.getGrades(e);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  deleteAlls = e => {\r\n    e.preventDefault();\r\n    let arrayKeys = Object.keys(this.grades);\r\n    console.log(\"getting here?\");\r\n    for (let i = 0; i < arrayKeys.length; i++) {\r\n      if (arrayKeys[i] !== \"null\") {\r\n        database\r\n          .ref(\"students/\" + this.ID.id + \"/grades\")\r\n          .child(arrayKeys[i])\r\n          .remove()\r\n          .catch(e);\r\n      }\r\n    }\r\n\r\n    this.grades(e);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    let arrayKeys, arrayValues;\r\n\r\n    arrayKeys = Object.keys(this.grades); //this is for\r\n    arrayValues = Object.values(this.grades);\r\n\r\n    let arrayTest = [...arrayValues];\r\n    let adding = false;\r\n    var a = -1;\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            width: 400,\r\n            maxWidth: 500,\r\n            marginRight: 18,\r\n            marginTop: 68,\r\n            height: 500,\r\n            marginBottom: \"-28px\",\r\n            marginLeft: 32,\r\n            paddingTop: 5\r\n          }}\r\n        >\r\n          <form onSubmit={this.getGrades}>\r\n            <div class=\"input-group mb-3\" style={{ marginTop: 35 }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                  ID\r\n                </span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"studentID\"\r\n                required\r\n              />\r\n\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                style={{ backgroundColor: \"rgb(255,0,0)\" }}\r\n              >\r\n                search!\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <form onSubmit={this.updateInfo}>\r\n            <div className=\"input-group mb-3\" style={{ paddingTop: 20 }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Firstname</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                required\r\n                id=\"firstname\"\r\n                onChange={this.handleChange}\r\n                autocomplete=\"off\"\r\n              />\r\n            </div>\r\n            <div className=\"input-group\" style={{ paddingTop: 20 }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Middlename</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"middlename\"\r\n                required\r\n                id=\"middlename\"\r\n                onChange={this.handleChange}\r\n                autocomplete=\"off\"\r\n              />\r\n            </div>\r\n            <div className=\"input-group\" style={{ paddingTop: 20 }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Surname</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                required\r\n                id=\"lastname\"\r\n                onChange={this.handleChange}\r\n                autocomplete=\"off\"\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"date\"\r\n              name=\"birthday\"\r\n              id=\"birthday\"\r\n              onChange={this.handleChange}\r\n              required\r\n              style={{ marginTop: 16 }}\r\n            />\r\n            <div className=\"input-group\" style={{ width: 170 }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Course</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"course\"\r\n                required\r\n                id=\"course\"\r\n                onChange={this.handleChange}\r\n                list=\"courseList\"\r\n                autocomplete=\"off\"\r\n              />\r\n              <datalist id=\"courseList\">\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"BSCS\" />\r\n                <option value=\"BSBA\" />\r\n                <option value=\"BSED\" />\r\n                <option value=\"BSN\" />\r\n              </datalist>\r\n            </div>\r\n            <div className=\"input-group\" style={{ width: 170 }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Year</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"yearLevel\"\r\n                required\r\n                id=\"yearLevel\"\r\n                onChange={this.handleChange}\r\n                list=\"yearlevels\"\r\n                autocomplete=\"off\"\r\n              />\r\n              <datalist id=\"yearlevels\">\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"1st\" />\r\n                <option value=\"2nd\" />\r\n                <option value=\"3rd\" />\r\n                <option value=\"4th\" />\r\n                <option value=\"Masteral\" />\r\n              </datalist>\r\n            </div>\r\n            <div className=\"input-group\" style={{ width: 170 }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Semester</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"semester\"\r\n                required\r\n                id=\"semester\"\r\n                onChange={this.handleChange}\r\n                list=\"currentSemesters\"\r\n                autocomplete=\"off\"\r\n              />\r\n              <datalist id=\"currentSemesters\">\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"1st\" />\r\n                <option value=\"2nd\" />\r\n                <option value=\"Summer\" />\r\n              </datalist>\r\n            </div>\r\n            <div className=\"input-group\" style={{ width: 170 }}>\r\n              <div>\r\n                <span className=\"input-group-text\">SchoolYear</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"semesterYear\"\r\n                required\r\n                id=\"semesterYear\"\r\n                onChange={this.handleChange}\r\n                min=\"1975\"\r\n                max=\"3000\"\r\n                placeholder={new Date().getFullYear()}\r\n                autocomplete=\"off\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              id=\"saveChanges\"\r\n              style={{ backgroundColor: \"rgb(19,94,0)\" }}\r\n              disabled={true}\r\n            >\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            width: 481,\r\n            margin: 0,\r\n            marginTop: \"-494px\",\r\n            marginRight: 0,\r\n            marginLeft: 494,\r\n            height: 500\r\n          }}\r\n        >\r\n          <form onSubmit={this.submitGrades}>\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Subject</th>\r\n                    <th>Grade </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {arrayKeys && // if it exist\r\n                    arrayKeys.map(subjectGrade => {\r\n                      if (subjectGrade !== \"null\") {\r\n                        a = a + 1;\r\n\r\n                        // then map it\r\n                        return (\r\n                          <tr key={a + \"tr\"}>\r\n                            <td key={arrayKeys[a]}>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                defaultValue={subjectGrade}\r\n                                id={arrayValues[a]}\r\n                                style={{ color: \"black\" }}\r\n                                type=\"text\"\r\n                                disabled={true}\r\n                                required\r\n                              />\r\n                            </td>\r\n                            <td key={subjectGrade + a}>\r\n                              <input\r\n                                className=\"form-control\"\r\n                                defaultValue={arrayTest[a]}\r\n                                name={subjectGrade}\r\n                                id={subjectGrade}\r\n                                onChange={this.handleChange}\r\n                                input\r\n                                type=\"text\"\r\n                                required\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              style={{ backgroundColor: \"rgb(7,116,25)\" }}\r\n              disabled={true}\r\n              id=\"refresh\"\r\n              onClick={this.grades}\r\n            >\r\n              Refresh\r\n            </button>\r\n            <button className=\"btn btn-primary\">SaveChanges</button>\r\n          </form>\r\n          <form onSubmit={this.deleteAlls}>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              id=\"deleteAll\"\r\n              disabled={true}\r\n              style={{ backgroundColor: \"rgb(143,9,9)\" }}\r\n            >\r\n              DeleteAll\r\n            </button>\r\n          </form>\r\n\r\n          <form onSubmit={this.addNewSubject}>\r\n            <div className=\"input-group\" style={{ marginTop: 46 }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Subject</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"newSubject\"\r\n                placeholder=\"SUBJECT CODE\"\r\n                disabled={true}\r\n                required\r\n                type=\"text\"\r\n                autocomplete=\"off\"\r\n              />\r\n              <div className=\"input-group-append\" />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Grade</span>\r\n              </div>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"newGrade\"\r\n                placeholder=\"e.g. 96.4\"\r\n                disabled={true}\r\n                type=\"text\"\r\n                step=\".01\"\r\n                autocomplete=\"off\"\r\n              />\r\n              <div className=\"input-group-append\" />\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              id=\"newButton\"\r\n              disabled={true}\r\n              style={{ marginTop: 11 }}\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          <div\r\n            className=\"form-check\"\r\n            style={{ width: 100, marginTop: \"-23px\", marginLeft: 93 }}\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={this.tba}\r\n              id=\"TBA\"\r\n              disabled={true}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"formCheck-1\">\r\n              TBA\r\n            </label>\r\n          </div>\r\n\r\n          <form onSubmit={this.deleteSubject}>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Delete</span>\r\n              </div>\r\n              <select\r\n                className=\"browser-default shortFieldWidth\"\r\n                selected=\"selected\"\r\n                id=\"deleteSubject\"\r\n                disabled={false}\r\n                required\r\n              >\r\n                {arrayKeys.map(subject => {\r\n                  if (subject !== \"null\") {\r\n                    return <option value={subject}> {subject} </option>;\r\n                  }\r\n                })}\r\n              </select>\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  id=\"deleteButton\"\r\n                  disabled={true}\r\n                >\r\n                  DELETE\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminEdit;\r\n","import React from \"react\";\r\nimport { database } from \"./MyFirebase\";\r\nimport \"../App.css\";\r\nimport \"firebase/app\";\r\nimport _ from \"lodash\";\r\n\r\nclass StudentAccess extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.records = {};\r\n    this.grades = {};\r\n\r\n    this.studentID = {\r\n      id: \"\"\r\n    };\r\n  }\r\n\r\n  getGrades = e => {\r\n    e.preventDefault();\r\n    let studentID = document.getElementById(\"studentID\").value;\r\n    database\r\n      .ref(\"students/\" + studentID + \"/grades\")\r\n      .once(\"value\")\r\n      .then(doc => {\r\n        const data = doc.val();\r\n\r\n        this.grades = data;\r\n\r\n        console.log(this.grades);\r\n        this.getRecords(studentID);\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"That record doesnt exist\");\r\n        document.getElementById(\"studentID\").value = \"\";\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  getRecords = ID => {\r\n    database\r\n      .ref(\"students/\" + ID)\r\n      .once(\"value\")\r\n      .then(doc => {\r\n        const data = doc.val();\r\n\r\n        this.records = data;\r\n        this.forceUpdate();\r\n        console.log(this.records);\r\n        this.fillAllinput();\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"That record doesnt exist\");\r\n        document.getElementById(\"studentID\").value = \"\";\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  fillAllinput = () => {\r\n    document.getElementById(\"firstname\").value = this.records.firstname;\r\n    document.getElementById(\"middlename\").value = this.records.middlename;\r\n    document.getElementById(\"surname\").value = this.records.lastname;\r\n\r\n    document.getElementById(\"course\").value = this.records.course;\r\n    document.getElementById(\"year\").value = this.records.year;\r\n    document.getElementById(\"semester\").value = this.records.semester;\r\n    document.getElementById(\"birthday\").value = this.records.birthday;\r\n    document.getElementById(\"semesterYear\").value = this.records.semesterYear;\r\n  };\r\n\r\n  render() {\r\n    let arrayKeys, arrayValues, arrayTest, a;\r\n    if (this.grades != null) {\r\n      arrayKeys = Object.keys(this.grades);\r\n      arrayValues = Object.values(this.grades);\r\n      arrayTest = [...arrayValues];\r\n      a = -1;\r\n    }\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          width: 500,\r\n          height: 500,\r\n          paddingTop: 0,\r\n          marginTop: 69,\r\n          marginRight: 256,\r\n          backgroundColor: \"#8793ff\"\r\n        }}\r\n      >\r\n        <img\r\n          style={{\r\n            marginTop: 28,\r\n            backgroundImage: 'url(\"components/logo.png\")'\r\n          }}\r\n        />\r\n        <form onSubmit={this.getGrades}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"studentID\"\r\n            id=\"studentID\"\r\n            style={{ marginLeft: 35 }}\r\n          />\r\n          <button\r\n            className=\"btn btn-primary btn-sm\"\r\n            style={{ marginLeft: 4, marginTop: \"-8px\" }}\r\n          >\r\n            Button\r\n          </button>\r\n        </form>\r\n        <div className=\"row\" style={{ height: 109 }}>\r\n          <div className=\"col justify-content-center\" style={{ height: 140 }}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              id=\"firstname\"\r\n              readOnly\r\n              required\r\n              placeholder=\"FN\"\r\n              style={{\r\n                width: 130,\r\n                margin: 5,\r\n                backgroundColor: \"rgb(124,206,241)\",\r\n                marginLeft: 26\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"middlename\"\r\n              id=\"middlename\"\r\n              readOnly={true}\r\n              placeholder=\"MN\"\r\n              style={{\r\n                width: 130,\r\n                margin: 5,\r\n                backgroundColor: \"rgb(124,206,241)\"\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"surname\"\r\n              id=\"surname\"\r\n              readOnly={true}\r\n              placeholder=\"LN\"\r\n              style={{\r\n                width: 130,\r\n                margin: 5,\r\n                backgroundColor: \"rgb(124,206,241)\"\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"birthday\"\r\n              id=\"birthday\"\r\n              placeholder=\"BD\"\r\n              readOnly={true}\r\n              autoFocus\r\n              style={{\r\n                width: 100,\r\n                margin: 5,\r\n                backgroundColor: \"rgb(124,206,241)\",\r\n                marginLeft: 76\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"course\"\r\n              id=\"course\"\r\n              readOnly\r\n              placeholder=\"COURSE\"\r\n              style={{\r\n                width: 90,\r\n                margin: 5,\r\n                backgroundColor: \"rgb(124,206,241)\"\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"year\"\r\n              id=\"year\"\r\n              readOnly\r\n              placeholder=\"YEAR\"\r\n              style={{\r\n                width: 90,\r\n                margin: 5,\r\n                backgroundColor: \"rgb(124,206,241)\"\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"semester\"\r\n              id=\"semester\"\r\n              readOnly\r\n              placeholder=\"SEMESTER\"\r\n              style={{\r\n                margin: 5,\r\n                backgroundColor: \"rgb(124,206,241)\",\r\n                marginLeft: 126,\r\n                width: 90\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"semesterYear\"\r\n              id=\"semesterYear\"\r\n              readOnly\r\n              placeholder=\"S.Y\"\r\n              style={{\r\n                margin: 5,\r\n                backgroundColor: \"rgb(124,206,241)\",\r\n                width: 90\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"row\"\r\n          style={{\r\n            height: 238,\r\n            width: 450,\r\n            marginRight: 0,\r\n            marginLeft: 11,\r\n            marginTop: 20\r\n          }}\r\n        >\r\n          <div className=\"col\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ backgroundColor: \"#02709f\" }}>Subject</th>\r\n                    <th style={{ backgroundColor: \"#02709f\" }}>Grade</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                {arrayKeys && // if it exist\r\n                  arrayKeys.map(subjectGrade => {\r\n                    if (subjectGrade !== \"null\") {\r\n                      a = a + 1;\r\n                      if (arrayTest[a] > 75) {\r\n                        // then map it\r\n                        return (\r\n                          <tr key={a + \"tr\"}>\r\n                            <td key={arrayKeys[a]}>\r\n                              <input\r\n                                defaultValue={subjectGrade}\r\n                                id={arrayValues[a]}\r\n                                style={{ color: \"black\" }}\r\n                                disabled={true}\r\n                              />\r\n                            </td>\r\n                            <td key={subjectGrade + a}>\r\n                              <input\r\n                                defaultValue={arrayTest[a]}\r\n                                name={subjectGrade}\r\n                                onChange={this.handleChange}\r\n                                disabled={true}\r\n                                type=\"number\"\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      } else if (arrayTest[a] < 75) {\r\n                        // then map it\r\n                        return (\r\n                          <tr key={a + \"tr\"}>\r\n                            <td\r\n                              key={arrayKeys[a]}\r\n                              style={{ backgroundColor: \"#f88a8a\" }}\r\n                            >\r\n                              <input\r\n                                defaultValue={subjectGrade}\r\n                                id={arrayValues[a]}\r\n                                style={{ color: \"black\" }}\r\n                                disabled={true}\r\n                              />\r\n                            </td>\r\n                            <td\r\n                              key={subjectGrade + a}\r\n                              style={{ backgroundColor: \"#f88a8a\" }}\r\n                            >\r\n                              <input\r\n                                defaultValue={arrayTest[a]}\r\n                                name={subjectGrade}\r\n                                onChange={this.handleChange}\r\n                                disabled={true}\r\n                                type=\"text\"\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      } else {\r\n                        // then map it\r\n                        return (\r\n                          <tr key={a + \"tr\"}>\r\n                            <td\r\n                              key={arrayKeys[a]}\r\n                              style={{ backgroundColor: \"#b0b0b0\" }}\r\n                            >\r\n                              <input\r\n                                defaultValue={subjectGrade}\r\n                                id={arrayValues[a]}\r\n                                style={{ color: \"black\" }}\r\n                                disabled={true}\r\n                              />\r\n                            </td>\r\n                            <td\r\n                              key={subjectGrade + a}\r\n                              style={{ backgroundColor: \"#b0b0b0\" }}\r\n                            >\r\n                              <input\r\n                                defaultValue={arrayTest[a]}\r\n                                name={subjectGrade}\r\n                                onChange={this.handleChange}\r\n                                disabled={true}\r\n                                type=\"text\"\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    }\r\n                  })}\r\n                  </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default StudentAccess;\r\n","import React from \"react\";\r\n\r\nclass Widgets extends React.Component {\r\n    \r\n  weather = (d, s, id) => {\r\n    var js,\r\n      fjs = d.getElementsByTagName(s)[0];\r\n    if (!d.getElementById(id)) {\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = \"https://weatherwidget.io/js/widget.min.js\";\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container float-left\" style={{ width: 120 }}>\r\n        <div>\r\n          <a\r\n            className=\"weatherwidget-io\"\r\n            style={{ pointerEvents: \"none\" }}\r\n            href=\"https://forecast7.com/en/14d09120d69/nasugbu/\"\r\n            data-label_1=\"NASUGBU\"\r\n            data-label_2=\"WEATHER\"\r\n            data-theme=\"original\"\r\n          >\r\n            NASUGBU WEATHER\r\n          </a>\r\n          <script>\r\n            {this.weather(document, \"script\", \"weatherwidget-io-js\")}\r\n          </script>\r\n        </div>\r\n        <div className=\"container float-center\">\r\n          <a href=\"https://www.hitwebcounter.com\" target=\"_blank\">\r\n            <img\r\n              src=\"https://hitwebcounter.com/counter/counter.php?page=7198363&style=0005&nbdigits=5&type=page&initCount=0\"\r\n              title=\"User Stats\"\r\n              Alt=\"webcounterwebsite\"\r\n              border=\"0\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Widgets;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\nimport RetrieveData from \"./components/RetreiveData\";\n\nimport AddData from \"./components/AddData\";\n\nimport AdminEdit from \"./components/AdminEdit\"\nimport StudentAccess from \"./components/StudentAccess\"\nimport Widgets from \"./components/widgets\"\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <React.Fragment>\n        \n          <Route path=\"/retrieve\" component={StudentAccess} />\n          <Route path=\"/add\" component={AddData} />\n          <Route path=\"/widgets\" component={Widgets} />\n          <Route path=\"/admin\" component={AdminEdit} />\n\n        \n          \n        </React.Fragment>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}